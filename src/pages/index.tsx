import Head from "next/head";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import SelectBox from "../../components/SelectBox";
import InputText from "../../components/InputText";
import { Button, Form } from "react-bootstrap";
import { SetStateAction, useEffect, useState } from "react";
import AlertText from "../../components/AlertText";
import ModalConfirm from "../../components/ModalConfirm";

const inter = Inter({ subsets: ["latin"] });
interface Profile {
  name?: string;
  email?: string;
  birthday?: string;
  tel?: string;
  role?: string;
}
export default function Home() {
  const [switchInput, setSwitchInput] = useState<boolean>(true);
  const [openModalConfirm, setOpenModalConfirm] = useState<boolean>(false);
  const [selectedItem, setSelectedItem] = useState("");
  // const [typeInput, setTypeInput] = useState<InputType>("input");
  const [data, setData] = useState("");
  const [name, setName] = useState<any>("");
  const [email, setEmail] = useState<any>(null);
  const [birthDay, setBirthDay] = useState("");
  const [phone, setPhone] = useState("");
  const [emailError, setEmailError] = useState("");
  const [phoneError, setPhoneError] = useState("");

  const [validName, setValidName] = useState<boolean>(false);
  const [validphone, setValidphone] = useState<boolean>(false);

  const today = new Date().toISOString().substr(0, 10); // วันปัจจุบันในรูปแบบ YYYY-MM-DD

  const [regisProfile, setRegisProfile] = useState<Profile>({
    name: "",
    email: "",
    birthday: "",
    tel: "",
    role: "user",
  });
  const MessageAlerttext: MessageAlertPopup = {
    title: "THIS IS PROPS TITLE",
    detail: "DETAILS MSG PROPS",
    type: "info", //ถ้าไม่ใส่จะมี log ถามหาแต่จะไม่เป็น stoper
    position: "top-end",
  };
  const MessageConFirmtext: MessagePopup = {
    title: "THIS IS CONFIRM success",
    detail: "DETAILS success",
    type: "success",
    afterConfirmType: "success",
    afterConfirmTitle: "Finished !!",
    afterConfirmDetail: "Detail prop after confirm",
    confirmButtonText: "Sure, Create/Edit  pewpew!",
  };
  const MessageWarningtext: MessagePopup = {
    title: "THIS IS CONFIRM warning",
    detail: "DETAILS warning",
    type: "error",
    afterConfirmType: "success",
  };
  const dataCreate = {
    name: "Nicolas",
    email: "nico@gmail.com",
    password: "123456",
    avatar: "https://api.lorem.space/image/face?w=640&h=480",
  };
  const ErrorMssage = {
    name: "Please fill name",
    email: " eieie",
  };
  const optionSelect = [
    { id: 1, name: "admin" },
    { id: 2, name: "user" },
  ];
  const handleDataFromAlert = (dataFromAlert: any) => {
    setData(dataFromAlert);
  };
  const handleTextareaChange = (id: string, value: any) => {
    setData(value);
    // setRegisProfile({
    //   name: value,
    //   email: "",
    //   birthday: "",
    //   tel: "",
    //   role: "user",
    // });
  };
  const setItemName = (value: any) => {
    setName(value);
  };
  const setItemEmail = (value: any) => {
    if (!value.includes("@")) {
      setEmail(value);
      setEmailError("Invalid email address.");
    } else {
      setEmail(value);
      setEmailError("");
    }
  };
  const setItemPhone = (value: any) => {
    const onlyDigits = value.replace(/\D/g, "");
    setPhone(onlyDigits);
  };

  const handleBirthDayChange = (value: any) => {
    const inputDate = value;
    if (inputDate > today) {
      setBirthDay(today);
    } else {
      setBirthDay(inputDate);
    }
  };
  const handleSelected = () => {};
  const handelCheckValid = () => {
    setValidName(!name.length);
    const isValidPhoneNumber = /^0\d{9}$/.test(phone);
    if (isValidPhoneNumber) {
      setValidphone(true);
    } else {
      setValidphone(false);
      setPhoneError("Please fill start with 0");
    }
  };
  useEffect(() => {
    handelCheckValid();
  }, [name, email, birthDay, phone]);

  return (
    <>
      <Head>
        <title>Example Bootstrap</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        <div className={styles.description}>
          <h3 className="text-center">Register </h3>

          <div>
            {/* <div className={styles.center} style={{ margin: 10 }}>
              <Button onClick={() => setSwitchInput(!switchInput)}>
                {switchInput ? "TextInput" : "Textarea"}
              </Button>
            </div> */}
            <div style={{ height: "auto" }}>
              <div className="row">
                <div className="col-6">
                  <InputText
                    id="name"
                    isTextarea={false} //ตัวแปลงในการใช้งาน
                    type="text"
                    required={true}
                    ErrorMssage={validName ? ErrorMssage.name : ""}
                    placeHolder="Enter name"
                    value={name}
                    defaultValue={"jim"}
                    isInvalid={validName}
                    isValid={!validName}
                    maxLength={20}
                    onChange={setItemName}
                    style={{ resize: "none" }}
                  ></InputText>
                </div>
                <div className="col-6">
                  <InputText
                    id="email"
                    isTextarea={false} //ตัวแปลงในการใช้งาน
                    type="email"
                    required={true}
                    ErrorMssage={emailError !== "" ? emailError : ""}
                    defaultValue={"example@"}
                    disabled={false}
                    isInvalid={!!emailError}
                    placeHolder="Enter text"
                    value={email}
                    onChange={setItemEmail}
                  ></InputText>
                </div>
              </div>
              <div className="row">
                <div className="col-6">
                  <InputText
                    id="BirthDay"
                    required={false}
                    isTextarea={false}
                    type="date"
                    defaultValue={"date defaultValue"}
                    placeHolder="Enter date"
                    max={today}
                    value={birthDay}
                    onChange={handleBirthDayChange}
                    style={{ resize: "none" }}
                  ></InputText>
                </div>
                <div className="col-6">
                  <InputText
                    id="Tel"
                    isTextarea={false} //ตัวแปลงในการใช้งาน
                    type="tel"
                    required={false}
                    placeHolder="Enter phone number (e.g., 0XXXXXXXXX)"
                    value={phone}
                    ErrorMssage={!validphone ? phoneError : ""}
                    isValid={validphone}
                    isInvalid={!validphone}
                    defaultValue={"099555555"}
                    onChange={setItemPhone}
                    style={{ resize: "none" }}
                    maxLength={10}
                  ></InputText>
                </div>
                <div className="col-6">
                  <SelectBox
                    id="role"
                    optionSelect={optionSelect}
                    placeHolder={"role"}
                    onChange={handleSelected}
                    labelKey={"name"}
                    defaultValue={[optionSelect[1]]}
                    disabled={false}
                  ></SelectBox>
                </div>
              </div>
            </div>

            <div className="mt-5 d-flex justify-content-center">
              {/* <Button variant="warning" onClick={() => AlertText(MessageAlerttext)}>
            Show Alert
          </Button> */}
              <ModalConfirm
                // data={dataCreate}
                onClick={handleDataFromAlert}
                MessageConFirmtext={MessageConFirmtext}
              ></ModalConfirm>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
